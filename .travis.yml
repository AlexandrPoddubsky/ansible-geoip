---
sudo: required
services:
  - docker
env: 
  - distribution: centos
    version: 7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distribution: ubuntu
    version: 14.04
    init: /sbin/init
    run_opts: ""
  - distribution: ubuntu
    version: 15.04
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  - distribution: ubuntu
    version: 16.04
    init: /lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

before_install:
    # Pull image
    - 'sudo docker pull ${distribution}:${version}'
      # Customize Container
    - 'sudo docker build --rm=true --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests'

script:
    - container_id=$(mktemp)
      # Run container in detached state
    - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} ${distribution}-${version}:ansible "${init}" > "${container_id}"'
      ## TEST: Ansible syntax check.
    - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'

      #################
      #### TEST: 1 ####
      #################
    - >
        sudo docker exec "$(cat ${container_id})" ls /usr/share/GeoIP &>/dev/null
        && (echo 'This directory should not yet exist: fail' && exit 1)
        || (echo 'This directory does not yet exist: pass' && exit 0)

      ## Run role with default paramters
    - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml'

      ## Verify database copied into place
    - >
        sudo docker exec "$(cat ${container_id})" ls /usr/share/GeoIP/GeoLiteCity.dat
        && (echo '/usr/share/GeoIP/GeoLiteCity.dat extracted: pass' && exit 0)
        || (echo '/usr/share/GeoIP/GeoLiteCity.dat not extracted: fail' && exit 1)

      ## Test role idempotence
    - >
        sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
        | grep -q 'changed=0.*failed=0'
        && (echo 'Idempotence test: pass' && exit 0)
        || (echo 'Idempotence test: fail' && exit 1)

      ###################
      #### TEST: 1.1 ####
      ###################
      ## Test that the `geo_ip_override` variable forces the update.
    - >
        sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --extra-vars "geo_ip_override=true"
        | grep -q 'changed=2.*failed=0'
        && (echo 'Changes detected: pass' && exit 0)
        || (echo 'NO CHANGES detected: fail' && exit 1)

      ## Cleanup
    - 'sudo docker stop "$(cat ${container_id})"' 

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/

